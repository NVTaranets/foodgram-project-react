version: '3.3'
services:

  portainer:
    image: portainer/portainer-ce:2.11.0
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    environment:
      - VIRTUAL_HOST=broker
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data
    depends_on:
      - nginx

  db:
    image: postgres:14.0-alpine
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - ./.env
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    env_file:
      - ./.env
    ports:
      - "5050:5050"
    restart: unless-stopped

  frontend:
    image: dnvth/foodgram-frontend:latest
    volumes:
      - ./frontend/:/app/result_build/

  backend:
    image: dnvth/foodgram-backend:latest
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env
  
  nginx:
    image: nginx:1.19.3
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html/
      - ./docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend

volumes:
  static_value:
  media_value: